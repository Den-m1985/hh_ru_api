name: Run Tests

on:
  push:
    branches:
      - master  # branch push only

jobs:
  run_tests_job:
    name: run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # https://github.com/actions/checkout/tree/v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3  # https://github.com/actions/setup-java/tree/v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Run tests
        run: mvn test

  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: run_tests_job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: Build docker archive image
        uses: docker/build-push-action@v5 # https://github.com/docker/build-push-action
        with:
          context: .
          tags: hh-ru-api:latest
          outputs: type=docker,dest=./hh-ru-api.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: hh-ru-api-image
          path: ./hh-ru-api.tar
      - name: List files
        run: ls -la


  copy_to_server:
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: hh-ru-api-image
      - name: Copy Docker image to remote server
        uses: appleboy/scp-action@v0.1.7  # https://github.com/appleboy/scp-action/tree/v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "hh-ru-api.tar"
          target: "~/"

  deploy_on_server:
    runs-on: ubuntu-latest
    needs: copy_to_server
    steps:
      - name: Deploy on remote server
        uses: appleboy/ssh-action@v1.0.3  # https://github.com/appleboy/ssh-action/tree/v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            docker load -i ~/hh-ru-api.tar
            docker stop hh-ru-api || true
            docker rm hh-ru-api || true
            
            mkdir -p /var/lib/vaity/files
            chmod -R 777 /var/lib/vaity/files
            
            docker run -d \
              --env "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" \
              --env "TELEGRAM_BOT_NAME=${{ secrets.TELEGRAM_BOT_NAME }}" \
              --env "SUPPER_ADMIN_PASSWORD=${{ secrets.SUPPER_ADMIN_PASSWORD }}" \
              --env "ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}" \
              --env "APP_STORAGE_DIR=/data/vaity/files" \
              --env-file .env \
              -v /var/lib/vaity/files:/data/vaity/files \
              --network=hh_network \
              -p 8080:8080 \
              --name hh-ru-api hh-ru-api:latest

  clear_temp_on_server:
    runs-on: ubuntu-latest
    needs: deploy_on_server
    steps:
      - name: Delete on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            if [ -f ~/hh-ru-api.tar ]; then
              rm ~/hh-ru-api.tar
              echo "Temporary file removed"
            else
              echo "Temporary file not found, skipping"
            fi
            echo "Cleaning up Docker resources..."
            docker image prune -f  || echo "Docker cleanup failed"
